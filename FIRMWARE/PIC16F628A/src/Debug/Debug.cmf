%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$startup.obj
end_init CODE 0 0 0 1 2
config CONFIG 0 2007 2007 1 2
$Debug.obj
cinit CODE 0 7FE 7FE 2 2
text3 CODE 0 6C7 6C7 23 2
text2 CODE 0 6EA 6EA 34 2
text1 CODE 0 765 765 99 2
maintext CODE 0 71E 71E 47 2
cstackBANK0 BANK0 1 20 20 B 1
cstackCOMMON COMMON 1 70 70 E 1
strings STRING 0 1 1 92 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
BANK0 002B-006F 1
BANK1 00A0-00EF 1
BANK2 0120-014F 1
CODE 0093-06C6 2
CONST 0093-06C6 2
EEDATA 2100-217F 2
ENTRY 0093-06C6 2
IDLOC 2000-2003 2
RAM 002B-006F 1
RAM 00A0-00EF 1
RAM 0120-014F 1
SFR0 0000-001F 1
SFR1 0080-009F 1
SFR2 0100-011F 1
SFR3 0180-01EF 1
STACK 00A0-00EF 1
STRCODE 0093-06C6 2
STRING 0093-06C6 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <file name>:<line number> <address> <psect name> <class name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$Debug.obj
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":15 6C7 text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":43 6C7 text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":45 6C9 text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":46 6CB text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":47 6D1 text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":48 6D8 text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":49 6DF text3 CODE
"C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c":52 6E3 text3 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":41 6EA text2 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":42 6EA text2 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":43 6FD text2 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":44 714 text2 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":63 71E maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":65 71E maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":66 721 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":67 724 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":68 725 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":69 726 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":70 727 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":71 728 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":72 729 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":73 72A maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":75 72B maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":76 72E maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":77 731 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":81 734 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":83 736 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":84 73A maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":86 73C maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":87 744 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":88 754 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":89 758 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":90 75B maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":92 75D maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":85 764 maintext CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":46 765 text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":47 765 text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":48 779 text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":49 78E text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":50 7A4 text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":51 7BB text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":52 7D0 text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":53 7E6 text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src/main.c":54 7FD text1 CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\Debug.as":391 7FE cinit CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\Debug.as":394 7FE cinit CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\Debug.as":400 7FE cinit CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\Debug.as":401 7FE cinit CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\Debug.as":402 7FF cinit CODE
$startup.obj
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":36 0 functab CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":37 0 functab CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":38 0 functab CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":39 0 functab CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":40 0 functab CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":41 0 functab CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":60 0 reset_vec CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":66 0 init CODE
"F:\PROJECTS\PROGRAMMING\16F628A-BCD7-XC8\FIRMWARE\PIC16F628A\src\Debug\startup.as":69 0 end_init CODE
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__S0 2008 0 ABS 0 - -
__S1 7E 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Hintentry 0 0 CODE 0 intentry -
__Lintentry 0 0 CODE 0 intentry -
__CFG_BOREN$ON 0 0 ABS 0 - Debug.obj
__CFG_PWRTE$ON 0 0 ABS 0 - Debug.obj
_main E3C 0 CODE 0 maintext Debug.obj
___sp 0 0 STACK 2 stack startup.obj
btemp 7E 0 ABS 0 - Debug.obj
ltemp 7E 0 ABS 0 - Debug.obj
ttemp 7E 0 ABS 0 - Debug.obj
wtemp 7E 0 ABS 0 - Debug.obj
start 0 0 CODE 0 init startup.obj
_TRISB 86 0 ABS 0 - Debug.obj
_PORTA 5 0 ABS 0 - Debug.obj
reset_vec 0 0 CODE 0 reset_vec startup.obj
_PORTB 6 0 ABS 0 - Debug.obj
_CMCON 1F 0 ABS 0 - Debug.obj
ltemp0 7E 0 ABS 0 - Debug.obj
ttemp0 7E 0 ABS 0 - Debug.obj
wtemp0 7E 0 ABS 0 - Debug.obj
ltemp1 82 0 ABS 0 - Debug.obj
ttemp1 81 0 ABS 0 - Debug.obj
wtemp1 80 0 ABS 0 - Debug.obj
ltemp2 86 0 ABS 0 - Debug.obj
ttemp2 84 0 ABS 0 - Debug.obj
wtemp2 82 0 ABS 0 - Debug.obj
ltemp3 80 0 ABS 0 - Debug.obj
ttemp3 87 0 ABS 0 - Debug.obj
wtemp3 84 0 ABS 0 - Debug.obj
ttemp4 7F 0 ABS 0 - Debug.obj
wtemp4 86 0 ABS 0 - Debug.obj
wtemp5 88 0 ABS 0 - Debug.obj
wtemp6 7F 0 ABS 0 - Debug.obj
__Hconfig 4010 0 CONFIG 0 config -
__Lconfig 400E 0 CONFIG 0 config -
__end_of__stringtab E 0 STRING 0 strings Debug.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
__Hfunctab 0 0 CODE 0 functab -
__Lfunctab 0 0 CODE 0 functab -
__Hcommon 0 0 ABS 0 common -
__Lcommon 0 0 ABS 0 common -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
___int_sp 0 0 STACK 2 stack startup.obj
getBCDByteBitForNumber@row 20 0 BANK0 1 cstackBANK0 Debug.obj
__Habs1 0 0 ABS 0 abs1 -
__Labs1 0 0 ABS 0 abs1 -
__Hsfr0 0 0 ABS 0 sfr0 -
__Lsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Lsfr3 0 0 ABS 0 sfr3 -
?_getBCDByteBitForNumber 76 0 COMMON 1 cstackCOMMON Debug.obj
__size_of_getBCDByteBitForNumber 0 0 ABS 0 - Debug.obj
__end_of_setBCDCharacterNumber FFC 0 CODE 0 text1 Debug.obj
__Hcode 0 0 ABS 0 code -
__Lcode 0 0 ABS 0 code -
getBCDByteBitForNumber@b 76 0 COMMON 1 cstackCOMMON Debug.obj
stackhi 0 0 ABS 0 - startup.obj
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 Debug.obj
stacklo 0 0 ABS 0 - startup.obj
__Hinit 0 0 CODE 0 init -
__Linit 0 0 CODE 0 init -
___wmul D8E 0 CODE 0 text3 Debug.obj
__end_of_main ECA 0 CODE 0 maintext Debug.obj
__Htext 0 0 ABS 0 text -
__Ltext 0 0 ABS 0 text -
___wmul@multiplier 70 0 COMMON 1 cstackCOMMON Debug.obj
end_of_initialization FFC 0 CODE 0 cinit Debug.obj
___wmul@multiplicand 72 0 COMMON 1 cstackCOMMON Debug.obj
__size_of_setBCDCharacterNumber 0 0 ABS 0 - Debug.obj
__stringtab 2 0 STRING 0 strings Debug.obj
getBCDByteBitForNumber@number 78 0 COMMON 1 cstackCOMMON Debug.obj
__CFG_FOSC$XT 0 0 ABS 0 - Debug.obj
_TRISAbits 85 0 ABS 0 - Debug.obj
_PORTAbits 5 0 ABS 0 - Debug.obj
_PORTBbits 6 0 ABS 0 - Debug.obj
__Hstrings 0 0 ABS 0 strings -
__Lstrings 0 0 ABS 0 strings -
__pstrings 2 0 STRING 0 strings Debug.obj
_setBCDCharacterNumber ECA 0 CODE 0 text1 Debug.obj
main@currentNumber 29 0 BANK0 1 cstackBANK0 Debug.obj
__Hbank0 0 0 ABS 0 bank0 -
__Lbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Lbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Lbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 BANK3 1 bank3 -
__Lbank3 0 0 BANK3 1 bank3 -
___latbits 0 0 ABS 0 - Debug.obj
__Hpowerup 0 0 CODE 0 powerup -
__Lpowerup 0 0 CODE 0 powerup -
__ptext1 ECA 0 CODE 0 text1 Debug.obj
__ptext2 DD4 0 CODE 0 text2 Debug.obj
__ptext3 D8E 0 CODE 0 text3 Debug.obj
__Hclrtext 0 0 ABS 0 clrtext -
__Lclrtext 0 0 ABS 0 clrtext -
__end_of__initialization FFC 0 CODE 0 cinit Debug.obj
__end_of_getBCDByteBitForNumber E3C 0 CODE 0 text2 Debug.obj
__Hidloc 0 0 IDLOC 0 idloc -
__Lidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Lstack 0 0 STACK 2 stack -
__Hspace_0 2008 0 ABS 0 - -
__Lspace_0 0 0 ABS 0 - -
__Hspace_1 7E 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
?___wmul 70 0 COMMON 1 cstackCOMMON Debug.obj
__Hcinit 1000 0 CODE 0 cinit -
__Lcinit FFC 0 CODE 0 cinit -
__Hspace_3 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__size_of_main 0 0 ABS 0 - Debug.obj
_SEGMENT_MAP E 0 STRING 0 strings Debug.obj
__end_of_SEGMENT_MAP 126 0 STRING 0 strings Debug.obj
main@acumulated 27 0 BANK0 1 cstackBANK0 Debug.obj
__Hend_init 2 0 CODE 0 end_init -
__Lend_init 0 0 CODE 0 end_init -
__size_of___wmul 0 0 ABS 0 - Debug.obj
__Hreset_vec 0 0 CODE 0 reset_vec -
__Lreset_vec 0 0 CODE 0 reset_vec -
getBCDByteBitForNumber@id 22 0 BANK0 1 cstackBANK0 Debug.obj
intlevel0 0 0 CODE 0 functab startup.obj
__CFG_WDTE$OFF 0 0 ABS 0 - Debug.obj
intlevel1 0 0 CODE 0 functab startup.obj
intlevel2 0 0 CODE 0 functab startup.obj
intlevel3 0 0 CODE 0 functab startup.obj
intlevel4 0 0 CODE 0 functab startup.obj
intlevel5 0 0 CODE 0 functab startup.obj
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON Debug.obj
__end_of___wmul DD4 0 CODE 0 text3 Debug.obj
__CFG_CPD$OFF 0 0 ABS 0 - Debug.obj
start_initialization FFC 0 CODE 0 cinit Debug.obj
__Hmaintext 0 0 ABS 0 maintext -
__Lmaintext 0 0 ABS 0 maintext -
__pmaintext E3C 0 CODE 0 maintext Debug.obj
__CFG_MCLRE$ON 0 0 ABS 0 - Debug.obj
setBCDCharacterNumber@num 24 0 BANK0 1 cstackBANK0 Debug.obj
__initialization FFC 0 CODE 0 cinit Debug.obj
__stringbase C 0 STRING 0 strings Debug.obj
___wmul@product 74 0 COMMON 1 cstackCOMMON Debug.obj
__CFG_CP$OFF 0 0 ABS 0 - Debug.obj
__CFG_LVP$OFF 0 0 ABS 0 - Debug.obj
_getBCDByteBitForNumber DD4 0 CODE 0 text2 Debug.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect in on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
reset_vec 0 0 0 1 2
cinit 0 7FE FFC 2 2
config 0 2007 400E 1 2
cstackCOMMON 1 70 70 E 1
cstackBANK0 1 20 20 B 1
text1 0 765 ECA 99 2
strings 0 1 2 92 2
maintext 0 71E E3C 47 2
text2 0 6EA DD4 34 2
text3 0 6C7 D8E 23 2
